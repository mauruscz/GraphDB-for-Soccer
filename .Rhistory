install.packages(c("np", "rgl"))
?exp
help.search("exponential")
help.start()        # hypertext (HTML) version of R's online doc
RSiteSearch("mean") # broad search for 'mean' on http://search.r-project.org (will open in browser)
3-    1 # R will ignore these spaces
3 -     # the '+' prompt signals an incomplete command
1
-1/0; 0/0; 1/0; sqrt(-2+0i)  # notice we use ';' to evaluate distinct expressions in a single command line
1:5         # The vector of numbers 1, 2, 3, 4, 5
mean(1:5)
sum(1:5)
(2:5)^10    # 2 to the power of 10, 3 to the power of 10, ... a vector
log2(c(0.5, 1, 2, 4, 8))
x <- 3
X
x
a <- c(1,3,2,4,5)
(a <- c(1,3,2,4,5))
c(0,2^2,mean(a),pi,"hello")
1:5                 # forward sequence with operator ':'
5:1                 # backward sequence with operator ':'
2*5:1               # operator ':' dominates other operators
seq(from=0,to=10,length=5)   # function 'seq()' generates
seq(from=0,to=10,by=5)       # sorted sequences of given length/step
rep(x=1:3,times=2)     # function 'rep()' generates repeated sequences
rep(x=1:3,times=1:3)
rep(c("ETH","ZURICH"),c(3,2))
paste("X",1:5,sep="")              # function 'paste()' and recycling of values
paste(c("Jan","Feb"),2010,sep="-")
gl(n=3,k=2,label=c("L","M","H"))   # function 'gl()' generates levels
set.seed(1234) # set seed of the random number generator
rnorm(n=5,mean=0,sd=2) # 5 draws from N(0,2) with 'rnorm()'
sample(x=1:10,size=5) # 'sample()' draws samples of specified size
sort(sample(x=1:10,size=10, replace=TRUE)) # 'sort()' sorts in ascending/descending order
ls()                # list stored objects in current R session
ls(pattern="^x")    # list objects starting with 'x'
getwd()              # display current working directory
setwd(dir="C:/")     # set current working directory at 'C:\'
save(a,file="M.Rdata")         # save R object m in file M.Rdata
save.image("myfile.Rdata")     # save current workspace in myfile.RData
dim(Credit)
# we will be using routines in the accompanying script:
source("auxiliary.R")
# we will be using routines in the accompanying script:
source("auxiliary.R")
Credit = read.csv("credsco.csv", header = TRUE, quote = "\"", dec = ".", check.names=TRUE)
# we will be using routines in the accompanying script:
source("auxiliary.R")
Credit = read.csv("credsco.csv", header = TRUE, quote = "\"", dec = ".", check.names=TRUE)
dim(Credit)
# what are the variables?
names(Credit)
# count frequence of values for target variable
table(Credit$Assessment)
attach(Credit)
View(Credit)
View(Credit)
View(Credit)
View(Credit)
typeof(Income)
typeof(Capital)
hist(Income, col=2)
typeof(Deadline)
boxplot(Deadline)
title ("These are the deadlines")
install.packages(c("kernlab", "tree"))
install.packages(c("kernlab", "tree"))
install.packages(c("kernlab", "tree"))
install.packages(c("kernlab", "tree"))
library(readr)
library(dplyr)
library(plyr)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
transfers_all <- read_csv("data/transfers-all.csv")
top250 <- read_csv("data/top250-00-19.csv")
top250$type <- "Purchase"
#transform all prices in transfers_all to euros and without k/m, only for purchases
purchases <- transfers_all[grep("^?", transfers_all$transferFee),]
purchases$fee <- as.numeric(gsub("[?km]", "", purchases$transferFee))
k.index          <- substr(purchases$transferFee, nchar(purchases$transferFee), nchar(purchases$transferFee)) == 'k'
purchases$fee[k.index] <- purchases$fee[k.index] * 1116.56
m.index          <- substr(purchases$transferFee, nchar(purchases$transferFee), nchar(purchases$transferFee)) == 'm'
purchases$fee[m.index] <- purchases$fee[m.index] * 1116555.09
purchases <- subset(purchases, select = -c(transferFee))
purchases$type <-"Purchase"
#same but for loan
loans <- transfers_all[grep("Loan fee:", transfers_all$transferFee),]
stopwords = c("Loan","fee:","?","m","k")
loans$fee <- as.numeric(gsub(paste0(stopwords,collapse = "|"),"", loans$transferFee))
k.index          <- substr(loans$transferFee, nchar(loans$transferFee), nchar(loans$transferFee)) == 'k'
loans$fee[k.index] <- loans$fee[k.index] * 1116.56
m.index          <- substr(loans$transferFee, nchar(loans$transferFee), nchar(loans$transferFee)) == 'm'
loans$fee[m.index] <- loans$fee[m.index] * 1116555.09
loans <- subset(loans, select = -c(transferFee))
loans$type <-"Loan"
free <- transfers_all[grep("Free [Tt]ransfer", transfers_all$transferFee),]
free$fee = 0
free <- subset(free, select = -c(transferFee))
free$type <-"Free Transfer"
gratis_loan <- transfers_all[grep("^Loan$", transfers_all$transferFee),]
gratis_loan$fee = 0
gratis_loan <- subset(gratis_loan, select = -c(transferFee))
gratis_loan$type <-"Gratis Loan"
#All the others data have no fee, so we decided to discard them
df <- do.call("rbind", list(purchases, free, loans, gratis_loan))
df <- subset(df, select = -c(playerUri,sellerClubUri, buyerClubUri, transferUri,timestamp ))
df$Season <-gsub("/","-",df$Season)
colnames(df) <- c("Season", "Name", "Position", "Age", "Team_from", "League_from","Team_to", "League_to","Player_image","Player_nationality", "Transfer_fee","type")
df <- df[c("Name","Position","Age","Team_from","League_from","Team_to","League_to","Season","Transfer_fee","type","Player_image","Player_nationality")]
df <-na.omit(df,cols("Team_from","Team_to", "League_from","League_to","Transfer_fee","Player_image","Player_nationality"))
sum(is.na(df))
sum(is.na(top250))
sum(is.na(top250$Market_value))
inner  <- merge(df, top250, by = c("Name", "Team_from", "Team_to"), all = FALSE)
inner <- subset(inner, select = -c(Position.y,Age.y,League_from.y,League_to.y,Season.y,Transfer_fee.y,type.y))
colnames(inner) <-c("Name","Team_from","Team_to","Position","Age","League_from","League_to","Season","Transfer_fee","type","Player_image","Player_nationality","Market_value")
library(readr)
library(dplyr)
library(plyr)
library(tidyverse)
transfers_all <- read_csv("C:/Users/Utente/Desktop/Progetto/OD/transfers-all.csv")
top250 <- read_csv("C:/Users/Utente/Desktop/Progetto/OD/top250-00-19.csv")
library(readr)
library(dplyr)
library(plyr)
library(tidyverse)
transfers_all <- read_csv("data/transfers-all.csv")
top250 <- read_csv("data/top250-00-19.csv")
View(top250)
View(transfers_all)
library(readr)
library(dplyr)
library(plyr)
library(tidyverse)
transfers_all <- read_csv("data/transfers-all.csv")
top250 <- read_csv("data/top250-00-19.csv")
top250$type <- "Purchase"
options(scipen = 999)
#transform all prices in transfers_all to euros and without k/m, only for purchases
purchases <- transfers_all[grep("^?", transfers_all$transferFee),]
purchases$fee <- as.numeric(gsub("[?km]", "", purchases$transferFee))
k.index          <- substr(purchases$transferFee, nchar(purchases$transferFee), nchar(purchases$transferFee)) == 'k'
purchases$fee[k.index] <- purchases$fee[k.index] * 1116.56
m.index          <- substr(purchases$transferFee, nchar(purchases$transferFee), nchar(purchases$transferFee)) == 'm'
purchases$fee[m.index] <- purchases$fee[m.index] * 1116555.09
purchases <- subset(purchases, select = -c(transferFee))
purchases$type <-"Purchase"
#same but for loan
loans <- transfers_all[grep("Loan fee:", transfers_all$transferFee),]
stopwords = c("Loan","fee:","?","m","k")
loans$fee <- as.numeric(gsub(paste0(stopwords,collapse = "|"),"", loans$transferFee))
k.index          <- substr(loans$transferFee, nchar(loans$transferFee), nchar(loans$transferFee)) == 'k'
loans$fee[k.index] <- loans$fee[k.index] * 1116.56
m.index          <- substr(loans$transferFee, nchar(loans$transferFee), nchar(loans$transferFee)) == 'm'
loans$fee[m.index] <- loans$fee[m.index] * 1116555.09
loans <- subset(loans, select = -c(transferFee))
loans$type <-"Loan"
free <- transfers_all[grep("Free [Tt]ransfer", transfers_all$transferFee),]
free$fee = 0
free <- subset(free, select = -c(transferFee))
free$type <-"Free Transfer"
gratis_loan <- transfers_all[grep("^Loan$", transfers_all$transferFee),]
gratis_loan$fee = 0
gratis_loan <- subset(gratis_loan, select = -c(transferFee))
gratis_loan$type <-"Gratis Loan"
#All the others data have no fee, so we decided to discard them
df <- do.call("rbind", list(purchases, free, loans, gratis_loan))
df <- subset(df, select = -c(playerUri,sellerClubUri, buyerClubUri, transferUri,timestamp ))
df$season <-gsub("/","-",df$season)
colnames(df) <- c("Season", "Name", "Position", "Age", "Team_from", "League_from","Team_to", "League_to","Player_image","Player_nationality", "Transfer_fee","type")
df <- df[c("Name","Position","Age","Team_from","League_from","Team_to","League_to","Season","Transfer_fee","type","Player_image","Player_nationality")]
df <-na.omit(df,cols("Team_from","Team_to", "League_from","League_to","Transfer_fee","Player_image","Player_nationality"))
sum(is.na(df))
sum(is.na(top250))
sum(is.na(top250$Market_value))
inner  <- merge(df, top250, by = c("Name", "Team_from", "Team_to","Season"), all = FALSE)
inner <- subset(inner, select = -c(Position.y,Age.y,League_from.y,League_to.y,Transfer_fee.y,type.y))
colnames(inner) <-c("Name","Team_from","Team_to","Position","Age","League_from","League_to","Season","Transfer_fee","type","Player_image","Player_nationality","Market_value")
inner <- tibble::rowid_to_column(inner, "ID")
write.csv(inner,'data/transfers.csv')
View(loans)
